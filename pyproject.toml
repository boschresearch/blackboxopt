[tool.poetry]
name = "blackboxopt"
version = "4.14.0"
description = "A common interface for blackbox optimization algorithms along with useful helpers like parallel optimization loops, analysis and visualization scripts."
readme = "README.md"
repository = "https://github.com/boschresearch/blackboxopt"
authors = ["Bosch Center for AI, Robert Bosch GmbH"]
license = "Apache-2.0"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
parameterspace = ">=0.7.2,<0.9"
numpy = {version = "^1.22.0", optional = true}
plotly = {version = "^5.10.0", optional = true}
scipy = {version = "^1.6.0", optional = true}
statsmodels = {version = "^0.13.2", optional = true}
dask = {version = "^2023.1.0", optional = true}
distributed = {version = "^2023.1.0", optional = true}
pandas = {version = "^1.2.4", optional = true}
botorch = {version = "^0.7.1", optional = true}
pymoo = {version = "^0.6.0.1", optional = true}

[tool.poetry.dev-dependencies]
black = "^22.3.0"
pytest = "^7.2.0"
mypy = "^0.950"
pytest-timeout = "^2.1.0"
pytest-cov = "^3.0.0"
mkdocs = "^1.3.0"
mkdocstrings = {version="^0.18.1", extras=["python-legacy"]}
mkdocs-material = "^8.2.11"
mkdocs-gen-files = "^0.3.4"
mkdocs-awesome-pages-plugin = "^2.7.0"
mike = "^1.1.2"
ruff = "^0.0.259"
pre-commit = "^2.18.1"
toml = "^0.10.2"
types-toml = "^0.10.7"
kaleido = "0.2.1"  # pin hard, because 0.2.1post1 fails to install

[tool.poetry.extras]
all = ["numpy", "plotly", "scipy", "statsmodels", "dask", "distributed", "pandas", "botorch", "pymoo"]
hyperband = ["numpy"]
bohb = ["numpy", "scipy", "statsmodels"]
botorch = ["botorch"]
space-fill = ["numpy", "scipy"]
dask = ["dask", "distributed"]
visualization = ["plotly", "scipy", "pandas", "pymoo"]
testing = ["numpy"]

[tool.mypy]
ignore_missing_imports = true
no_strict_optional = true

[tool.black]
line-length = 88
# Examples should remain with line-length 80:
exclude = '^blackboxopt/examples/'

[tool.ruff]
# Enable pycodestyle, Pyflakes, isort
select = ["E", "F", "I"]
ignore = []
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
]
line-length = 88
# Ignore unused import in __init__.py files
per-file-ignores = { "__init__.py" = ["F401"] }

[tool.coverage.run]
source = ['blackboxopt']

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
